name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [created]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    env:
      # Add your env vars here if needed, but best to use GitHub Secrets
      # For example: AI_API_KEY: ${{ secrets.AI_API_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 pytest coverage

      - name: Lint with Black
        run: |
          black --check .

      - name: Lint with Flake8
        run: |
          flake8 .

      - name: Run tests with coverage
        run: |
          coverage run -m pytest tests/
          coverage report -m

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  docker-build-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: yourdockerhubusername/agbakoai:latest
          platforms: linux/amd64,linux/arm64

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Deploy to your environment
        run: |
          echo "Deploy steps here (e.g., SSH, Kubernetes, etc.)"
